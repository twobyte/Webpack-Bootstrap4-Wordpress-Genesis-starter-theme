/* ==========================================================================
   Variables
   ========================================================================== */

/*
	issue with webpack production and bootstrap4 css
	https://github.com/roots/sage/issues/2017#issuecomment-366542617
*/
$navbar-dark-toggler-icon-bg:       url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{str-replace(str-replace(#{$navbar-dark-color}, "(", "%28"), ")", "%29")}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
$navbar-light-toggler-icon-bg:      url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{str-replace(str-replace(#{$navbar-light-color}, "(", "%28"), ")", "%29")}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");


// Font Face
// @include fontface('FONT_NAME', 'assets/fonts/', 'FONT_FAMILY');

// Structure
$pageWidth: 1000px;

// Text Selection
$brandColor: #84bD00;
$linkColor: #64A70B;
$textColor: #231f20;

// Bootstrap vars
$brand-primary:  darken($brandColor, 6.5%);
$text-color:     $textColor;
$link-color:     $linkColor;


$offwhite: #efefef; //offwhite
$white: #fff;
$black: #1b1e1e;

$midgrey: #878787;
$gray-600: $midgrey;

$charcoal: #3D3D3D;
$gray-800: $charcoal;

$background: $white; 


$selectionColor: $brandColor;

// Colors
$red: red;
$blue: blue;


$theme-colors: (
  "primary": $brandColor
);


$body-bg: $background;

//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.



$grid-breakpoints: (
  xs: 0,
  sm: 768px,
  md: 992px,
  lg: 1200px,
  xl: 1500px
);
$container-max-widths: (
  sm: 720px,
  md: 960px,
  lg: 1140px,
  xl: 1440px
);


// Extra small screen / phone
//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  map-get($grid-breakpoints, sm);
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  map-get($grid-breakpoints, md);
$screen-sm-min:              $screen-sm;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  map-get($grid-breakpoints, lg);
$screen-md-min:              $screen-md;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  map-get($grid-breakpoints, xl);
$screen-lg-min:              $screen-lg;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1);
$screen-sm-max:              ($screen-md-min - 1);
$screen-md-max:              ($screen-lg-min - 1);


//== Grid system
//
//## Define your custom responsive grid.

//** Number of columns in the grid.
$grid-columns:              16;
//** Padding between columns. Gets divided in half for the left and right.
$grid-gutter-width:         32px;
// Navbar collapse
//** Point at which the navbar becomes uncollapsed.
$grid-float-breakpoint:     $screen-sm-min;
//** Point at which the navbar begins collapsing.
$grid-float-breakpoint-max: ($grid-float-breakpoint - 1);


$maxWidth: 1220px;
$desktop: $screen-lg;
$tablet: $screen-sm;
$mobile: $screen-xs;


$breakpoint: $grid-float-breakpoint;


//== Container sizes
//
//## Define the maximum width of `.container` for different screen sizes.

// Small screen / tablet
$container-tablet:             (720px + $grid-gutter-width);
//** For `$screen-sm-min` and up.
$container-sm:                 $container-tablet;

// Medium screen / desktop
$container-desktop:            (940px + $grid-gutter-width);
//** For `$screen-md-min` and up.
$container-md:                 $container-desktop;

// Large screen / wide desktop
$container-large-desktop:      (1140px + $grid-gutter-width);
//** For `$screen-lg-min` and up.
$container-lg:                 $container-large-desktop;




$body-font-family: 'Lato', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-family-sans-serif:  $body-font-family;
$body-font-weight: 400;
$font-weight-normal: $body-font-weight;
$header-font-family: 'Lora', serif;
$header-font-weight: 700;
$header-font-style: normal;
$font-size-base: 1rem; //16px 0.874rem; // 14px
$line-height-base: 1.625;

/*
$fa-font-path: "assets/fonts";
$icon-font-path: "assets/fonts/";
*/

$em-base: 10px; //  html { font-size: 62.5%; } in _genesis.scss
// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#px)
@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1em;
}

// Creating rems and pixels
@function remCalc($pxWidth) {
  @return $pxWidth / $em-base * 1rem;
}

// Grid Calculation for Percentages
@function gridCalc($colNumber, $totalColumns) {
  @return percentage(($colNumber / $totalColumns));
}


/* # Imports
---------------------------------------------------------------------------------------------------- */

/* GRAB THE MAIN FONT */ 
@import url(//fonts.googleapis.com/css?family=Lato:300,400,700);